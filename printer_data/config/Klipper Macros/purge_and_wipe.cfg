# Inspired by https://github.com/VoronDesign/VoronUsers/blob/master/orphaned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber/Macros/nozzle_scrub.cfg
###########################################################################################################################################

# A Nozzle Purge and Wipe that is similar to how the Bambu Labs P1P, P1S, X1C starts.
# Nozzle Wipe Only to clean the tip before or possibly during a print, filament changes, etc... 

# This sample config assumes the following: The user has implemented the default decontaminator purge bucket & a nozzle cleaning mod
# for the VORON 1/2. It can be tweaked to customised purge bucket geometries.

# Bucket and nozzle cleaning device can be put (Front, Back, Left, or Right). You will have to note the absolute position of the bucket
# and scrubber. 

# Default parameters are set for safe speeds and movements. You may tweak the parameters for the nozzle scrub procedure to fit your printer.

###########################################################################################################################################
# Macro Command Names
###########################################################################################################################################


# wipe_nozzle            # Simply wipes the nozzle.
# purge_and_wipe         # Purge filament and wipes nozzle. Similar to how the Bambu P1S, P1P, X1 purges and cleans the nozzle.

###########################################################################################################################################
# Purge and Wipe Nozzle
###########################################################################################################################################

[gcode_macro _purge_and_wipe_var]
description: variables for purge and wipe nozzle function

# These parameters define filament purging.
variable_filament_print_temp: 250          ; Normal print temp of the filament, The temp will be reduced by 10 percent to help with oozing after the purge.
variable_purge_temp_min:      180          ; Minimum Temp allowed for purge.
variable_purge_length:        100          ; Amount of filament to purge in mm. Klipper default is max 50mm Add to the [extruder] section "max_extrude_only_distance : <value>" value can be whatever you want.
variable_purge_speed:         300          ; Speed, in mm/min, of the purge. 300 is default for Revo Voron = (957 mm @ 12 mm³/s - 0.4 mm)
variable_purge_retraction:      5          ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_offset_z:        20          ; After purging, how far up to move Z, in mm.
variable_ooze_spd_z:          600          ; After purging, how fast to move up Z, in mm/min.

# These parameters define your cleaning, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_wipe_temp:           150          ; Minimum nozzle temperature to permit a wipe.
variable_clearance_z:           5          ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and tube.
variable_wipe_qty:              3          ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_travel_spd_xy:      8000          ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_travel_spd_z:       1500          ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd:           8000          ; Nozzle wipe speed in mm/min.


# Adjust this so that your nozzle hits the wiping device. For a Bambu Labs style wipe the nozzle should hit the upper quarter or more of the tube.
# If the filament doesn't brake off try lowering the nozzle more. 
variable_wiper_top:           2.5          ; Z position in mm

#      |      |  
#       \    /    #####      
#        \__/   #########
#              ########### 
#               #########
#                 #####

# Nozzle wipe position. Position nozzle so it is centered over the cleaning device.
variable_wiper_x:             102          ; X position of wiper. This should also be the same measurement as the bucket_left_width
variable_wiper_y_max:        True          ; True sets Y axis maximum (default for rear of machine) , False sets Y axis to minimum for the front of the machine. 

# Center to side travel distance
variable_wipe_travel:         10           ; distance to travel from center when cleaning in (mm)    
  
###########################################################################################################################################
# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. To simplify things I have changed measurements from end to center.
# 
#                                           
#   bucket_start (x)        ___________________________________________   Y-Max = Rear Value=[position_max]
#     X-Min = Left         |                 |       |                 |  
# Value=0[position_min]    |                 |       |                 |
#                          |                 |_______|                 |  X-Max = Right Value=[position_max]
#                          |                 |   |   |                 |
#                          |                 |   |   |                 |
#                          |_________________|.  | . |_________________|  Y-Min = Front Value=0[position_min]
#                           ← ----------------- → ← ----------------- →
#              bucket_left_width  End to Center__|__Center to End  bucket_right_width
#        _______________________________________________________________________________________
#                                          PRINTER FRONT
#
#
#
#               X-0,Y-MAX             REAR              X-MAX,Y-MAX
#                          __________________________  
#                         |                          |            
#                         |                          |
#                         |                          |
#               LEFT      |                          |  RIGHT
#                         |                          |
#                         |                          |
#                         |                          |
#                         |                          |
#                         |__________________________|
#                X-0,Y-0         PRINTER FRONT            Y-0,X-MAX
#
###########################################################################################################################################

## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    53

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    78

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    102   

# These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
variable_bucket_right_width:    52            

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is the default for the rear corner of the bed.
# installation of purge bucket at rear left.
variable_bucket_start:          0

# The variable will later be set to contain (at random) a number representing the left or right bucket.
variable_bucket_pos:            0

gcode: # gcode is only used to complete the macro. Do Not Delete.

    {action_respond_info("This macro is only storing variables")}

###########################################################################################################################################
# Purge and Wipe
###########################################################################################################################################


[gcode_macro purge_and_wipe]
description: Purge some filament and wipe the nozzle

gcode:

  {% if printer.toolhead.homed_axes != 'xyz' %}
		STATUS_HOMING   ; Sets SB-leds to homing-mode
    G28							; Home All Axes
	{% endif %}
  
  SAVE_GCODE_STATE NAME=purge_wipe_nozzle

  {% set pwv = printer["gcode_macro _purge_and_wipe_var"] %}

  # Save the hotend temperature
  {% set saved_extruder_temp = printer.extruder.temperature|round|int %}

  G90        ; Set Motion System to Absolute Positioning
  M83        ; Set Extruder to Relative mode
  G92 E0     ; Reset Extruder
  M107       ; Turn off Fan, TOO NOISY!

  # Randomly select left or right bin for purge. 0 = left, 1 = right
  SET_GCODE_VARIABLE MACRO=_purge_and_wipe_var VARIABLE=bucket_pos VALUE={range(0, 2)|random}
    
  {% set extrude_temp = params.PRINT_TEMP|default(pwv.filament_print_temp)|int * 0.9 %} ; Reduce Purge Temp by 10% so filament will still flow but not ooze as much.
  {% set purge_length = params.PURGE_LENGTH|default(pwv.purge_length) %}

  # Grab max position of Y-axis from config to use in setting a fixed y position
  {% if pwv.wiper_y_max is true %}
    {% set max_y = printer.toolhead.axis_maximum.y|int - 2 %}
  {% else %}
    {% set max_y = printer.toolhead.axis_minimum.y|int + 2 %}
  {% endif %}
    
  # Raise Z for travel.
  {% if printer.toolhead.position.z < pwv.wiper_top + pwv.clearance_z %}
    G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  {% endif %}
  
  # Travel to location
  {% if pwv.wiper_y_max is true %}
    G1 Y{max_y - 10} F{pwv.travel_spd_xy}
  {% else %}
    G1 Y{max_y + 10} F{pwv.travel_spd_xy}
  {% endif %}
  # Slow down before reaching location
  G1 Y{max_y} F{pwv.travel_spd_xy * 0.1}
  # Move nozzle over one of the bucket sides
  {% set bucket_left = pwv.bucket_left_width / 2 %}
  {% set bucket_right = pwv.wiper_x + (pwv.bucket_right_width / 2) %}
  {% if pwv.bucket_pos == 0 %}
    G1 X{bucket_left} F{pwv.travel_spd_xy}
  {% else %}
    G1 X{bucket_right} F{pwv.travel_spd_xy}
  {% endif %}
  
  STATUS_HEATING  ; Set SB-leds
  {% if extrude_temp < pwv.purge_temp_min %}
    RESPOND TYPE=echo MSG='{"Setting \"%s\" temperature to pruge minimum %3.1f\u00B0C," % (printer.toolhead.extruder, pwv.purge_temp_min)}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={pwv.purge_temp_min}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={pwv.purge_temp_min - 5} MAXIMUM={pwv.purge_temp_min + 5} ; Heat the nozzle to purge temp minimum
  {% else %}
    RESPOND TYPE=echo MSG='{"Setting \"%s\" temperature to %3.1f\u00B0C," % (printer.toolhead.extruder, extrude_temp)}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extrude_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extrude_temp - 5} MAXIMUM={extrude_temp + 5} ; Heat the nozzle to purge temp
  {% endif %}

  # Slowly moving up to ensure ooze is straight and can be broken off  
  G1 Z{pwv.wiper_top + pwv.ooze_offset_z} F{pwv.ooze_spd_z}

  # Purge  
  STATUS_PRINTING ; Set SB-leds
  G1 E{purge_length} F{pwv.purge_speed}
  M400

  STATUS_COOLING  ; Set SB-leds
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={pwv.wipe_temp}  ; Sets hotend temp for wipe without waiting

  {% if pwv.bucket_pos == 0 %}
    {% for wiggle in range(8) %} ; Wiggle the Toolhead
      G1 X{bucket_left + 5} F12000
      G1 X{bucket_left - 5} F12000
    {% endfor %}
  {% else %}
    {% for wiggle in range(8) %} ; Wiggle the Toolhead
      G1 X{bucket_right + 5} F12000
      G1 X{bucket_right - 5} F12000
    {% endfor %}
  {% endif %}

  G1 E-{pwv.purge_retraction * 2} F{pwv.purge_speed * 2} ; Double retraction and retract quickly
  G1 E{pwv.purge_retraction} F{pwv.purge_speed * 0.45} ; Slowly prime nozzle back to set retraction distance.

  M106 S255
  #TEMPERATURE_WAIT SENSOR=extruder MINIMUM={pwv.wipe_temp - 5} MAXIMUM={pwv.wipe_temp + 5}
  
  # Wipe
  STATUS_CLEANING  ; Set SB-leds
  G1 Z{pwv.wiper_top} F{pwv.travel_spd_z} ; Lower Z
  {% set move_right = pwv.wiper_x + pwv.wipe_travel) %}
  {% set move_left = pwv.wiper_x - pwv.wipe_travel %}
  {% if pwv.bucket_pos == 0 %}
    G1 X{move_left} F{4000}
    G1 X{move_right} F{2000}
    G1 X{move_left} F{4000}
    G1 X{move_right} F{2000}
    M107  ; stop part cooling fan
  {% else %}
    G1 X{move_right} F{4000}
    G1 X{move_left} F{2000}
    G1 X{move_right} F{4000}
    G1 X{move_left} F{2000}
    M107  ; stop part cooling fan
  {% endif %}
  {% for wipes in range(pwv.wipe_qty) %}
    G1 X{move_right} F{pwv.wipe_spd}
    G1 X{move_left} F{pwv.wipe_spd}
  {% endfor %}

  # Done
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  G1 X{pwv.bucket_start + (pwv.bucket_left_width / 2)} F{pwv.wipe_spd} ; Move nozzle to center of the main bucket side
  
  RESTORE_GCODE_STATE NAME=purge_wipe_nozzle
  
  # Was the hotend on before running this macro?
  {% if saved_extruder_temp > 140 %}
    STATUS_HEATING  ; Set SB-leds
    RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C," % (printer.toolhead.extruder, saved_extruder_temp)}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={saved_extruder_temp}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extrude_temp - 5} MAXIMUM={extrude_temp + 5}
    STATUS_READY  ; Set SB-leds
  {% else %}
    STATUS_READY  ; Set SB-leds
    RESPOND TYPE=echo MSG='{"Heater Off"}'
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% endif %}
  



###########################################################################################################################################
# Wipe Nozzle Only
###########################################################################################################################################



[gcode_macro wipe_nozzle]
description: Wipe the nozzle

gcode:

  {% if printer.toolhead.homed_axes != 'xyz' %}
    STATUS_HOMING   ; Sets SB-leds to homing-mode
		G28							;Home All Axes
	{% endif %}
    
  # Save the gcode state in this macro instance.
  SAVE_GCODE_STATE NAME=wipe_nozzle

  #G90        ; Set Motion System to Absolute Positioning

  {% set pwv = printer["gcode_macro _purge_and_wipe_var"] %}

  # Grab max position of Y-axis from config to use in setting a fixed y position
  {% if pwv.wiper_y_max is true %}
    {% set max_y = printer.toolhead.axis_maximum.y - 2 %}
  {% else %}
    {% set max_y = printer.toolhead.axis_minimum.y + 2 %}
  {% endif %}
      
  # Raise Z for travel.
  {% if printer.toolhead.position.z < pwv.wiper_top + pwv.clearance_z %}
    G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  {% endif %}
  {% if pwv.wiper_y_max is true %}
    G1 Y{max_y - 10} F{pwv.travel_spd_xy}
  {% else %}
    G1 Y{max_y + 10} F{pwv.travel_spd_xy}
  {% endif %}
  G1 Y{max_y} F{pwv.travel_spd_xy * 0.1}
  G4 P250

  G1 X{pwv.wiper_x + (pwv.wipe_travel / 2)} F{pwv.travel_spd_xy}
  G1 Z{pwv.wiper_top} F{pwv.travel_spd_z}
  
  # Perform wipe.
  G1 Z{pwv.wiper_top} F{pwv.travel_spd_z} ; Lower Z
  {% set start_left = pwv.wiper_x - 10 %}
  {% set move_right = pwv.wipe_travel + (pwv.wiper_x - 10) %}
  {% set start_right = pwv.wiper_x + 10 %}
  {% set move_left = pwv.wiper_x - 10 %}
  {% if pwv.bucket_pos == 0 %}
    G1 X{start_left} F{4000}
    G1 X{move_right} F{2000}
    G1 X{start_left} F{4000}
    G1 X{move_right} F{2000}
  {% else %}
    G1 X{start_right} F{4000}
    G1 X{move_left} F{2000}
    G1 X{start_right} F{4000}
    G1 X{move_left} F{2000}
  {% endif %}  
  {% for wipes in range(pwv.wipe_qty) %}
    G1 X{pwv.wiper_x + (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
    G1 X{pwv.wiper_x - (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
  {% endfor %}
  
  # Done
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  G1 X{pwv.bucket_start + (pwv.bucket_left_width / 2)} F{pwv.wipe_spd} ; Move nozzle to center of the main bucket side

  # Restore the gcode state to how it was before the macro.
  RESTORE_GCODE_STATE NAME=wipe_nozzle
  #RESTORE_GCODE_STATE NAME=wipe_nozzle MOVE=1 MOVE_SPEED=10000   ; Uncomment if you want the toolhead returned to the position before the wipe