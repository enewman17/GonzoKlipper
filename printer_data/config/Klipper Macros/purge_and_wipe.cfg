# Inspired by https://github.com/VoronDesign/VoronUsers/blob/master/orphaned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber/Macros/nozzle_scrub.cfg
###########################################################################################################################################

# A Nozzle Purge and Wipe that is similar to how the Bambu Labs P1P, P1S, X1C starts.
# Nozzle Wipe Only to clean the tip before or possibly during a print, filament changes, etc... 

# This sample config assumes the following: The user has implemented the default decontaminator purge bucket & a nozzle cleaner mod
# for the VORON 1/2. It can be tweaked to customised purge bucket geometries.

# Bucket and nozzle cleaning device can be put anywhere you like. 
# The purge and scrubbing routine is randomized.

# Default parameters are set for safe speeds and movements. You may tweak the parameters for the nozzle scrub procedure to fit your printer.

###########################################################################################################################################
# Macro Command Names
###########################################################################################################################################


# wipe_nozzle            # Simply wipes the nozzle.
# purge_and_wipe         # Purge filament and wipes nozzle. Similar to how the Bambu P1S, P1P, X1 purges and cleans the nozzle.


###########################################################################################################################################
# Purge and Wipe Nozzle
###########################################################################################################################################

[gcode_macro _purge_and_wipe_var]
description: variables for purge and wipe nozzle function

# These parameters define filament purging.
variable_purge_temp_min:      260          ; Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_length:         50          ; Amount of filament, in mm, to purge. *** Klipper will only purge a max of 50mm ***
variable_purge_multiplier:      4          ; Extra purges if needed since Klipper will only allow 50mm at a time. Usefull for filament changes.
variable_purge_speed:        1200          ; Speed, in mm/min, of the purge.
variable_purge_retraction:      5          ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_offset_z:        20          ; After purging, how far up to move Z, in mm.
variable_ooze_spd_z:          600          ; After purging, how fast to move up Z, in mm/min.

# These parameters define your cleaning, travel speeds, safe z clearance and how many times you want to wipe. Update as necessary. Wipe 
# direction is randomized based off whether the left or right bucket is randomly selected in the purge & scrubbing routine.
variable_wipe_temp:           150          ; Minimum nozzle temperature to permit a wipe.
variable_clearance_z:           5          ; When traveling, but not cleaning, the clearance along the z-axis between nozzle and tube.
variable_wipe_qty:              4          ; Number of complete (A complete wipe: left, right, left OR right, left, right) wipes.
variable_travel_spd_xy:      8000          ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_travel_spd_z:       1500          ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd:          20000          ; Nozzle wipe speed in mm/min.


# Adjust this so that your nozzle hits the wiping device. For a Bambu Labs style wipe the nozzle should hit the upper quarter of the tube. 
variable_wiper_top:           4.5          ; Z position in mm

# Nozzle wipe position. Position nozzle so it is centered over the cleaning device.
variable_wiper_x:             102          ; X position of wiper. This should also be the same measurement as the bucket_left_width
variable_wiper_y_max:        True          ; True sets Y axis maximum (default for rear of machine) , False sets Y axis to minimum for the front of the machine. 

# Center to side travel distance
variable_wipe_travel:          15         ; distance to travel when cleaning in mm    
  
###########################################################################################################################################
# These parameters define the size of your purge bucket. Update as necessary. If you decided to not enable purge, you can ignore 
# this section. A visual reference is provided below. To simplify things I have changed measurements from end to center.
# 
#                                           
#   bucket_start (x)        ___________________________________________   Y-Max = Rear Value=[position_max]
#     X-Min = Left         |                 |       |                 |  
# Value=0[position_min]    |                 |       |                 |
#                          |                 |_______|                 |  X-Max = Right Value=[position_max]
#                          |                 |   |   |                 |
#                          |                 |   |   |                 |
#                          |_________________|.  | . |_________________|  Y-Min = Front Value=0[position_min]
#                           ← ----------------- → ← ----------------- →
#              bucket_left_width  End to Center__|__Center to End  bucket_right_width
#        _______________________________________________________________________________________
#                                          PRINTER FRONT
# 
###########################################################################################################################################

## For V2.4 250mm build, uncomment below 
#variable_bucket_left_width:    53

## For V2.4 300mm build, uncomment below
#variable_bucket_left_width:    78

## For V2.4 350mm build, uncomment below
variable_bucket_left_width:    102   

# These values are defaulted from bucket geometry in CAD (rear left location). Change only if you're using a custom bucket.
variable_bucket_right_width:    52            

# For V1.8, you may need to measure where your bucket start is and input into bucket_start. Otherwise, a value of 0 is the default for the rear corner of the bed.
# installation of purge bucket at rear left.
variable_bucket_start:          0


gcode:

###########################################################################################################################################
# Purge and Wipe
###########################################################################################################################################


[gcode_macro purge_and_wipe]
description: Purge some filament and wipe the nozzle

# The variable will later be set to contain (at random) a number representing the left or right bucket.
variable_bucket_pos:            0

# The variable will be set to the current hotend temp. If the hotend was off it will be shut off again after purge function is complete.
variable_last_extruder_temp: {'restore': False, 'temp': 0}


gcode:

  {% if printer.toolhead.homed_axes != 'xyz' %}
		STATUS_HOMING   ; Sets SB-leds to homing-mode
    G28							;Home All Axes
	{% endif %}

  # Save the gcode state in this macro instance.
  SAVE_GCODE_STATE NAME=purge_and_wipe

  # Save the hotend temperature
  SET_GCODE_VARIABLE MACRO=purge_and_wipe VARIABLE=last_extruder_temp VALUE={{'restore': restore, 'temp': temp}}

  {% set pwv = printer["gcode_macro _purge_and_wipe_var"] %}
    
  {% set purge_temp = params.PURGE_TEMP|default(pwv.purge_temp_min)|int %}
 
  G90        ; Set Motion System to Absolute Positioning
  G92 E0     ; Reset Extruder
  M83        ; Set Extruder to Relative mode

  # Grab max position of Y-axis from config to use in setting a fixed y position
  {% if pwv.wiper_y_max is true %}
    {% set max_y = printer.toolhead.axis_maximum.y|int - 2 %}
  {% else %}
    {% set max_y = printer.toolhead.axis_minimum.y|int + 2 %}
  {% endif %}

  # Randomly select left or right bin for purge. 0 = left, 1 = right
  SET_GCODE_VARIABLE MACRO=purge_and_wipe VARIABLE=bucket_pos VALUE={range(0, 1) | random}
    
  # Raise Z for travel.
  {% if printer.toolhead.position.z < pwv.wiper_top + pwv.clearance_z %}
    G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  {% endif %}
  
  # Travel to location
  {% if pwv.wiper_y_max is true %}
    G1 Y{max_y|int - 10} F{pwv.travel_spd_xy}
  {% else %}
    G1 Y{max_y|int + 10} F{pwv.travel_spd_xy}
  {% endif %}
  # Slow down before reaching location
  G1 Y{max_y} F{pwv.travel_spd_xy * 0.1}
  # Move nozzle over one of the bucket sides
  {% if bucket_pos == 1 %}
    G1 X{pwv.bucket_left_width / 2} F{pwv.travel_spd_xy}
  {% else %}
    G1 X{pwv.wiper_x + (pwv.bucket_right_width / 2)} F{pwv.travel_spd_xy}
  {% endif %}
  
  # Is temp is at or above temp minimum
  {% if printer.extruder.temperature < purge_temp %}
    STATUS_HEATING  ; Sets SB-leds to heating-mode
    M107  ; Turn off Fan, TOO NOISY!
    M109 S{purge_temp} ; Heat the nozzle to purge temp
  {% endif %}

  # Slowly moving up to ensure ooze is straight and can be broken off  
  G1 Z{pwv.wiper_top + pwv.ooze_offset_z} F{pwv.ooze_spd_z}

  # Purge  
  STATUS_PRINTING
  {% for purge in range(pwv.purge_multiplier) %}
    G1 E{pwv.purge_length} F{pwv.purge_speed}
  {% endfor %}

  # Lower Temp and retract
  M109 S{pwv.wipe_temp}                       ; Sets hotend temp for wipe without waiting
  M106 S187                                   ; Turn on cooling fan
  G1 E-{pwv.purge_retraction * 2} F{pwv.purge_speed * 2} ; Double retraction and retract quickly
  G1 E{pwv.purge_retraction} F{pwv.purge_speed * 0.45} ; Slowly prime nozzle back to set retraction distance.
  G4 S3  ;Wait a few seconds

  # Wipe
  {% for wiggle in range(3) %} ; Wiggle the Toolhead a Little 
    G1 X{printer.toolhead.position.x|int + 1} F{pwv.wipe_spd}
    G1 X{printer.toolhead.position.x|int - 1} F{pwv.wipe_spd}
  {% endfor %}
  G1 Z{pwv.wiper_top} F{pwv.travel_spd_z} ; Lower Z
  {% for wipes in range(pwv.wipe_qty) %}
    G1 X{pwv.wiper_x - (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
    G1 X{pwv.wiper_x + (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
  {% endfor %}

  # Done
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  M107  ; stop part cooling fan
  G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  G1 X{pwv.bucket_start + (pwv.bucket_left_width / 2)} F{pwv.wipe_spd} ; Move nozzle to center of the main bucket side

  # Was the hotend on before running this macro?
  {% if last_extruder_temp.restore %}
    RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C," % (printer.toolhead.extruder, last_extruder_temp.temp) }'
    M104 S{last_extruder_temp.temp}
  {% else %}
    M104 S0
  {% endif %}

  # Restore the gcode state to how it was before the macro.
  RESTORE_GCODE_STATE NAME=purge_and_wipe



###########################################################################################################################################
# Wipe Nozzle Only
###########################################################################################################################################



[gcode_macro wipe_nozzle]
description: Wipe the nozzle

gcode:

  {% if printer.toolhead.homed_axes != 'xyz' %}
    STATUS_HOMING   ; Sets SB-leds to homing-mode
		G28							;Home All Axes
	{% endif %}
    
  # Save the gcode state in this macro instance.
  SAVE_GCODE_STATE NAME=wipe_nozzle

  {% set pwv = printer["gcode_macro _purge_and_wipe_var"] %}
    
  G90        ; Set Motion System to Absolute Positioning

  # Grab max position of Y-axis from config to use in setting a fixed y position
  {% if pwv.wiper_y_max is true %}
    {% set max_y = printer.toolhead.axis_maximum.y|int - 2 %}
  {% else %}
    {% set max_y = printer.toolhead.axis_minimum.y|int + 2 %}
  {% endif %}
      
  # Raise Z for travel.
  {% if printer.toolhead.position.z < pwv.wiper_top + pwv.clearance_z %}
    G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  {% endif %}
  {% if pwv.wiper_y_max is true %}
    G1 Y{max_y|int - 10} F{pwv.travel_spd_xy}
  {% else %}
    G1 Y{max_y|int + 10} F{pwv.travel_spd_xy}
  {% endif %}
  G1 Y{max_y} F{pwv.travel_spd_xy * 0.1}
  G4 P250

  G1 X{pwv.wiper_x + (pwv.wipe_travel / 2)} F{pwv.travel_spd_xy}
  G1 Z{pwv.wiper_top} F{pwv.travel_spd_z}
    
  
  # Perform wipe. Wipe direction based off bucket_pos for cool random scrubby routine.
  {% for wipes in range(pwv.wipe_qty) %}
    G1 X{pwv.wiper_x - (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
    G1 X{pwv.wiper_x + (pwv.wipe_travel / 2)} F{pwv.wipe_spd}
  {% endfor %}
  
  # Done
  SET_DISPLAY_TEXT MSG="Wipe Function Complete"
  G1 Z{pwv.wiper_top + pwv.clearance_z} F{pwv.travel_spd_z}
  G1 X{pwv.bucket_start + (pwv.bucket_left_width / 2)} F{pwv.wipe_spd} ; Move nozzle to center of the main bucket side

  # Restore the gcode state to how it was before the macro.
  RESTORE_GCODE_STATE NAME=wipe_nozzle
  #RESTORE_GCODE_STATE NAME=wipe_nozzle MOVE=1 MOVE_SPEED=10000   ; Uncomment if you want the toolhead returned to the position before the wipe